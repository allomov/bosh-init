// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/cmd/validator (interfaces: Validator)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	cpi "github.com/cloudfoundry/bosh-micro-cli/cpi"
	stemcell "github.com/cloudfoundry/bosh-micro-cli/deployer/stemcell"
	deployment "github.com/cloudfoundry/bosh-micro-cli/deployment"
	validator "github.com/cloudfoundry/bosh-micro-cli/deployment/validator"
	release "github.com/cloudfoundry/bosh-micro-cli/release"
)

// Mock of Validator interface
type MockValidator struct {
	ctrl     *gomock.Controller
	recorder *_MockValidatorRecorder
}

// Recorder for MockValidator (not exported)
type _MockValidatorRecorder struct {
	mock *MockValidator
}

func NewMockValidator(ctrl *gomock.Controller) *MockValidator {
	mock := &MockValidator{ctrl: ctrl}
	mock.recorder = &_MockValidatorRecorder{mock}
	return mock
}

func (_m *MockValidator) EXPECT() *_MockValidatorRecorder {
	return _m.recorder
}

func (_m *MockValidator) Finish() {
	_m.ctrl.Call(_m, "Finish")
}

func (_mr *_MockValidatorRecorder) Finish() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Finish")
}

func (_m *MockValidator) Start() {
	_m.ctrl.Call(_m, "Start")
}

func (_mr *_MockValidatorRecorder) Start() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Start")
}

func (_m *MockValidator) ValidateDeployment(_param0 string, _param1 deployment.Parser, _param2 validator.DeploymentValidator) (deployment.Deployment, deployment.CPIDeployment, error) {
	ret := _m.ctrl.Call(_m, "ValidateDeployment", _param0, _param1, _param2)
	ret0, _ := ret[0].(deployment.Deployment)
	ret1, _ := ret[1].(deployment.CPIDeployment)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockValidatorRecorder) ValidateDeployment(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateDeployment", arg0, arg1, arg2)
}

func (_m *MockValidator) ValidateRelease(_param0 string, _param1 cpi.Installer) (release.Release, error) {
	ret := _m.ctrl.Call(_m, "ValidateRelease", _param0, _param1)
	ret0, _ := ret[0].(release.Release)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockValidatorRecorder) ValidateRelease(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateRelease", arg0, arg1)
}

func (_m *MockValidator) ValidateStemcell(_param0 string, _param1 stemcell.Extractor) (stemcell.ExtractedStemcell, error) {
	ret := _m.ctrl.Call(_m, "ValidateStemcell", _param0, _param1)
	ret0, _ := ret[0].(stemcell.ExtractedStemcell)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockValidatorRecorder) ValidateStemcell(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateStemcell", arg0, arg1)
}
